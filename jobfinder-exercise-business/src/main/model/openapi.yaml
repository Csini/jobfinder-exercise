openapi: 3.0.0
info:
  description:
    Jobfinder Exercise Application
  version: 1.0.0
  title: jobfinder-exercise API
  contact:
    name: Exercise

servers:
  - url: http://localhost:9010/

paths:
  /client:
    post:
      tags: 
        - client
      summary: generates new apikey
      operationId: createClient
      parameters:
        - in: query
          name: name
          description: name von client (max 100 char)
          required: true
          schema:
             type: string
             maxLength: 100
        - in: query
          name: email
          description: unique email von client
          required: true
          schema:
             type: string
             pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
      responses:
        200:
          description: Returns the apikey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /position/{id}:
    get:
      tags: 
        - position
      summary: reads position with id
      operationId: getPosition
      parameters:
        - in: path
          name: id
          description: id von position
          required: true
          schema:
             type: integer
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Returns the position
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/Position'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /position:
    post:
      tags: 
        - position
      summary: saves new position
      operationId: savePosition
      parameters:
        - in: query
          name: title
          description: title von position (max 50 char)
          required: true
          schema:
             type: string
             maxLength: 50
        - in: query
          name: place
          description: palce von position
          required: true
          schema:
             type: string
             maxLength: 50
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Returns the URL from position
          content:
             text/plain:
              schema:
                type: string
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /position/search:
    post:
      tags: 
        - position
      summary: searches positions
      operationId: searchPosition
      parameters:
        - in: query
          name: keywword
          description: keyword von position (max 50 char)
          required: false
          schema:
             type: string
             maxLength: 50
        - in: query
          name: location
          description: location von position
          required: false
          schema:
             type: string
             maxLength: 50
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Returns the URL from positions in an array
          content:
             text/plain:
              schema:
                type: array
                items:
                  type: string
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'


components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  responses:
    BadRequestError:
      description: Syntax error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Request cannot be processed because it is syntactically wrong
            timestamp: '2023-04-20T11:00:00Z'
    UnauthorizedError:
      description: Authentication error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Authentication error
            timestamp: '2023-04-20T11:00:00Z'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Internal server error
            timestamp: '2023-04-20T11:00:00Z'
  schemas:
    ClientResponse:
      type: object
      required:
        - apikey
        - email
      properties:
        apikey:
          type: string
          format: uuid
        email:
          type: string
    Position:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        title:
          type: string
        place:
          type: string
    Error:
      type: object
      description: Error object
      required:
        - message
        - timestamp
      properties:
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          format: date-time
          description: The timestamp the error has occured